

ubuntu 20.04 LTS
install ssh
install java (WAJIB JAVA 11)

=========================== JENKINS MANUAL INSTALL =========================== 

javac --version
apt-get update
apt-get install openjdk-11-jdk-haeadless or apt-get install default-jdk   (java 11 di ubuntu 20.04 LTS)
java --version

https://github.com/EKI-INDRADI/eki-latihan-multi-java-ubuntu-server-1804-lts


video 25:30
https://www.jenkins.io/download/ (yg generic)

https://get.jenkins.io/war-stable/2.332.3/jenkins.war


mkdir -p /home/JENKINS_DATA &&
cd /home/JENKINS_DATA  && 
wget https://get.jenkins.io/war-stable/2.332.3/jenkins.war

java -jar jenkins.war --httpPort=7000 &  (defaultnya 8080)
java -jar jenkins.war --httpPort=7000 &  <<<< ( & = view log )
java -jar jenkins.war --httpPort=7000    <<<< ( & = tanpa view log )
java -jar jenkins.war --httpPort=7000 & 

java -jar jenkins.war --httpListenAddress=0.0.0.0 --httpPort=7000 & 

reference : https://www.jenkins.io/doc/book/installing/initial-settings/





------------- KILL PORT
sudo lsof -i :7000
kill -9 9052
------------- KILL PORT


untuk buka password

nano /root/.jenkins/secrets/initialAdminPassword atau

cat /root/.jenkins/secrets/initialAdminPassword

=========================== JENKINS MANUAL INSTALL =========================== 

------------------------- DOCKER - DEPRECATED IMAGE
https://hub.docker.com/_/jenkins (deprecated)


docker container stop jenkins_2.60.3_7000 &&
docker container rm jenkins_2.60.3_7000 &&
docker network rm jenkins_network &&
rm -rf /home/DOCKER_DATA/JENKINS/jenkins_home



mkdir -p /home/DOCKER_DATA/JENKINS/jenkins_home &&
chmod 777 -Rv /home/DOCKER_DATA/JENKINS/jenkins_home &&
docker pull jenkins:2.60.3-alpine && 
docker network create jenkins_network && 
docker network ls  && 
docker network inspect jenkins_network && 
docker container create --name jenkins_2.60.3_7000 \
--restart always \
--network jenkins_network \
-v /home/DOCKER_DATA/JENKINS/jenkins_home:/var/jenkins_home \
-p 7000:8080 \
-p 50000:50000 \
jenkins:2.60.3-alpine  &&
docker container start jenkins_2.60.3_7000 && 
docker container inspect jenkins_2.60.3_7000 && 
cat  /home/DOCKER_DATA/JENKINS/jenkins_home/secrets/initialAdminPassword




------------------------- /DOCKER - DEPRECATED IMAGE

------------------------- DOCKER - LATEST IMAGE

https://hub.docker.com/r/jenkins/jenkins (latest)


docker container stop jenkins_2.355_7000 &&
docker container rm jenkins_2.355_7000 &&
docker network rm jenkins_network &&
rm -rf /home/DOCKER_DATA/JENKINS/jenkins_home

mkdir -p /home/DOCKER_DATA/JENKINS/jenkins_home &&
chmod 777 -Rv /home/DOCKER_DATA/JENKINS/jenkins_home &&
docker pull jenkins/jenkins:2.355-jdk11 && 
docker network create jenkins_network && 
docker network ls  && 
docker network inspect jenkins_network && 
docker container create --name jenkins_2.355_7000 \
--restart=on-failure \
--network jenkins_network \
-v /home/DOCKER_DATA/JENKINS/jenkins_home:/var/jenkins_home \
-p 7000:8080 \
-p 50000:50000 \
jenkins/jenkins:2.355-jdk11  &&
docker container start jenkins_2.355_7000 && 
docker container inspect jenkins_2.355_7000 && 
cat  /home/DOCKER_DATA/JENKINS/jenkins_home/secrets/initialAdminPassword

------------------------- /DOCKER - LATEST IMAGE



docker network connect jenkins_network jenkins_2.60.3_7000

docker network connect jenkins jenkins_2.60.3_8080
 
docker container start jenkins_2.60.3_8080 

docker exec -it jenkins_2.60.3_8080 /bin/sh
docker exec -u 0 -it jenkins_2.60.3_8080 /bin/sh  (root user)
docker exec -it jenkins_2.46.3_8080 /bin/sh


nano /var/jenkins_home/secrets/initialAdminPassword  (dir jenkins)

nano /home/DOCKER_DATA/JENKINS/jenkins_home/secrets/initialAdminPassword (docker volume jenkins)
45fb8155f9cc413d949aa6b2521f30f6

cat  /home/DOCKER_DATA/JENKINS/jenkins_home/secrets/initialAdminPassword 

--------------------programmer zaman now

reference : 
https://docs.google.com/presentation/d/1JhqKkc7L9NOxSxnYHKlOHaPt7isbKcLfO-IU4QscEGk/edit
https://www.youtube.com/watch?v=qKI7Y2sUjbU&list=PL-CtdCApEFH_nxerGqyG2ai1tZ4hUgQWg




setelah isi password
unchecklist seluruh plugin (none)
1. create account

admin : crypt
masuk123
masuk123
CRYPT


2. 00:31:14 - Jenkins Data

tidak butuh database semua config di simpan pada folder .jenkins (atauo jenkins_home pada docker)

jika folder .jenkins / jenkins_home di hapus maka sama aja instal ulang

cd /root/.jenkins
pwd


2.00:33:52 - Membuat Job

task / job 

new item (untuk membuat job) -> freestyle object


description = dari job nya


3. new item -> build new = jalankan job
- ketika memilih build now , build history akan auto geneerate build 1 build 2 dst ..
- klik salah 1 tag -> changes
-  klik salah 1 tag ->  console output   (/var/jenkins_home/workspace/belajar jenkins)

4. new item -> configure = edit job

5. new item -> delete object 




6 back -> dashboard 
akan muncul list job nya


7. 00:39:14 - Menginstall Git Plugin
dashboard -> manage jenkins -> plugin manager -> installed
dashboard -> manage jenkins -> plugin manager -> availble -> Check now -> git

------------- MANUAL INSTAL
Signature verification failed in update site 'default'  ( error java)
manual install plugin /jenkins_home/plugins/
https://plugins.jenkins.io/  -> git
https://plugins.jenkins.io/git/#releases
------------- MANUAL INSTAL

download now and install after restart -> Installing Plugins/Upgrades



centang Restart Jenkins when installation is complete and no jobs are running



8. 00:39:14 - Menginstall Git Plugin -  install ssh github plugin jenkins (install ssh public ke github)

ls ~/.ssh
#cat ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub

-----------------
kalo ga asa id_rsa , dll
ssh-keygen -o
enter
enter
----------------

cat ~/.ssh/id_rsa.pub
<value rsa pub>

login github di web -> setting -> SSH and GPG Keys
RSA_PUB_VM_JENKINS
<paste rsa pub> 


dashboard -> manage jenkins -> plugin manager -> installed



9. 00:44:52 - Credentials
- untuk menginstal ssh akese / auto generate ssh akses

cat ~/.ssh/id_rsa

copy dari :
-----BEGIN OPENSSH PRIVATE KEY-----

sampe :
-----END OPENSSH PRIVATE KEY-----



dashboard -> manage jenkins -> manage credential

P	            Store       Domains
jenkins logo     	Jenkins	(global)


pilih yg global  -> add credentials -> SSH username with privaate key -> Scrope "global(jenkins, nodes, items, all child item, etc)"

ID : EKI-TESTING-GITHUB
description : GITHUB EKI
Username : EKI-INDRADI   (username GITHUB asli)

Passphrase :   ( ini ketika generate ssh key) , kalo seblumnya enter2 doaang brati kosong




10.   00:49:38 - Integrasi dengan Git  (cuma clone)

https://github.com/EKI-INDRADI/eki-latihan-jenkins-deploy-belajar-spring-dasar

dashboard -> belajar jenkins -> configure ->


source Code Management : Git 
repositories url :  git@github.com:EKI-INDRADI/eki-latihan-jenkins-deploy-belajar-spring-dasar.git    (pake yg SSH)
credential : EKI-TESTING-GITHUB (default none)
branch : main    (defaultnya : */master)


-> save


dashboard -> belajar jenkins -> build Now

akan muncul di build history
lalu kelik yang paling atas -> status

lalu kelik yang paling atas -> console output




untuk melihat source code program yang di deploy

dashboard -> belajar jenkins -> workspace



11. 00:53:45 - Build Step


------------- success
dashboard -> belajar jenkins -> configure -> tab  Source Code Management 
-> Build (add Build step)  : Execute shell (linux only, kalo windows execute windows batch command) ->  command nya  : ./mvnw clean       (.mvnw itu untuk build project java apache maven)
tambahkan lagi 
-> Build (add Build step)  : Execute shell ->  command nya  : ./mvnw compile test-compile
tambahkan lagi 
-> Build (add Build step)  : Execute shell ->  command nya  : ./mvnw test


-> SAVE

dashboard -> belajar jenkins -> Build Now -> history build -> status
dashboard -> belajar jenkins -> Build Now -> history build -> console output

tunggu sampe selesai

------------- success

------------- gagal

tambahkan 1 build step yang salah lalu drag ke urutan 2

dashboard -> belajar jenkins -> configure -> tab  Source Code Management
 
-> Build (add Build step)  : Execute shell > command : ./mvnw salah 

urutan jadi : 


-> Build (add Build step)  : Execute shell > command : ./mvnw clean  
-> Build (add Build step)  : Execute shell > command : ./mvnw salah 
-> Build (add Build step)  : Execute shell > command : ./mvnw compile test-compile
-> Build (add Build step)  : Execute shell > command : ./mvnw test




perbedaan success  atau gagal pada build history


gagal merah silang x pada build history
success hijau ceklis pada build history


klik build history -> #5 (urutan terakhir) -> console output terdapat console Finished: FAILURE







lalu hapus
dashboard -> belajar jenkins -> configure -> tab  Source Code Management -> Build (add Build step)  : Execute shell > command : ./mvnw salah  (delete pake silang x)


lalu dashboard -> belajar jenkins -> Build Now   kembali

------------- gagal



12. 01:00:29 - Build History

dashboard -> belajar jenkins -> Build History - > trend (untuk liad grafik/timeline build jenkins, kelebihan bisa liad seluruh jenkins build history,
 jika pada build history biasa yang di tampilkan hanya sebagian/sedikit tidak secara keseluruhan)


dashboard -> belajar jenkins -> Build Now -> history build -> console output -> full log   (untuk melihat detail history)



13. 01:03:52 - Post Build Action  (apa yang akan di lakukan jika proses build selesai misal kirim email , kirim ke slack , dll)

download & registrasi account slack


bikin workspace baru di EKI_TESTING


dashboard -> manage jenkins -> plugin manager -> Available -> Slack Notification -> download install and  restart


-----Jika Error 403 no valid crumb was include in the request , saat install Slack Notification --------------
manage Jenkins -> Configure Global Security -> CSRF Protection -> Enable proxy compatibility (checklist) -> Save
-------------------





harus install slack jenkins integration

login slack ke browser
trs buka
https://my.slack.com/services/new/jenkins-ci or https://ekitesting.slack.com/apps/new/A0F7VRFKN-jenkins-ci


makesure channel nya sudah sesuai, atau create channel baru #testing-jenkins-notification (TESTING JENKINS NOTIFICATION) -> skip email ->  #testing-jenkins-notification  -> add Jenkins CI Integration

untuk dapat secretkey 
https://ekitesting.slack.com/services/B03LTPJ3UPL?added=1  (setelah add)


chat di message channell :
added an integration to this channel: jenkins


Team Subdomain: ekitesting
Integration Token Credential ID: Create a secret text credential using LBdOsf0UuUuQd7obATOeHw1K as the value




dashboard -> Manage Jenkins -> Manage Credetials -> Stores scoped to Jenkins , Domains(global) ->  Global credentials (unrestricted) , Add Credentials
Kind : Secret text
Scope : GLobal (Jenkins,nodes,item,all child items,etc(
Secret : LBdOsf0UuUuQd7obATOeHw1K
Id : slack-token-testing-jenkins-notification
Description : slack-token-testing-jenkins-notification     (BIKIN DESCRIPTION KALO BISA JANGAN KEPANJANGAN / BANYAK SPASI SUKA ERROR)
-> Save


Dashboard -> Configuration -> Manage Jenkins -> Configure System -> Slack
Workspace : ekitesting  ( bukan EKI_TESTING pake huruf kecil yang di pake di domain https://ekitesting.slack.com)
Credential : slack-token-testing-jenkins-notification
Default channel / member_id : testing-jenkins-notification


-> test connection -> Save

----------------- JIKA ERROR saat test connection
Client error : Illegal character in query at index 85: https://ekitesting.slack.com/services/hooks/jenkins-ci?token=LBdOsf0UuUuQd7obATOeHw1K  

(pastikan description tidak alay, dan token benar))
----------------- JIKA ERROR saat test connection


setelah berhasil test di slack app di workspace "EKI_TESTING",  channel "testing-jenkins-notification" akan muncul

jenkins
APP  10:43 AM
Slack/Jenkins plugin: you're all set on http://192.168.100.55:7000/





Dashboard -> belajar Jenkins -> Configure -> Add post-build action -> slack Notification -> centang all / centang seperlunya , lebih lengkapnya bisa advanced   -> Save






Dashboard -> belajar Jenkins -> Build Now 

akan muncul notifikasi di slack app

jenkins
APP  10:50 AM
Belajar Jenkins - #7 Started by user CRYPT (Open)
New
10:50
Belajar Jenkins - #7 Success after 28 sec (Open)



14. 01:13:56 - Copy Job 

Dashboard - New Item ->  enter an item name : "Belajar Copy Job"  -> Copy from "Belajar Jenkins" -> Ok (semuanya di copy) -> Save -> Build Now



15. 01:16:19 - Scheduled Job (Kondisi selalu di Execute berdasarkan cron espression baik ada perubahan ataupun tidak)

Build Periodically == expression cron    https://crontab.guru/

Dashboard - New Item ->  enter an item name : "Belajar Scheduled Job"  -> Copy from "Belajar Jenkins" -> Ok (semuanya di copy) -> Build Tigger -> 
Build preiodically = * * * * * ->  Save



https://crontab.guru/#0_2_*_*_*

* * * * * = At every minute
0 2 * * * = At 02:00.


hasilnya pada apps slack : 


jenkins
APP  11:14 AM
Belajar Scheduled Job - #1 Started by timer (Open)
11:14
Belajar Scheduled Job - #1 Success after 27 sec (Open)
New
11:15
Belajar Scheduled Job - #2 Started by timer (Open)
11:15
Belajar Scheduled Job - #2 Success after 26 sec (Open)
11:16
Belajar Scheduled Job - #3 Started by timer (Open)
11:16
Belajar Scheduled Job - #3 Success after 28 sec (Open)



Dashboard -  Belajar Scheduled Job -> Build Tigger ->  Build preiodically = 0 2 * * * ->  Save   ( biar gak tiap menit)


16. 01:20:49 - Poll SCM  ( kondisi cron Hanya Jika ada perubahan baru  code program di build ) SCM = Source Code Management

Dashboard - New Item ->  enter an item name : "Belajar Poll SCM"  -> Copy from "Belajar Jenkins" -> Ok (semuanya di copy) -> Build Tigger -> 
Build preiodically = * * * * * ->  Save


hasilnya pada apps slack : 

jenkins
APP  11:28 AM
Belajar Poll SCM - #1 Unknown after 3.8 sec and counting (Open)
11:28
Belajar Poll SCM - #1 Success after 26 sec (Open)


COMMIT / edit file di github https://github.com/EKI-INDRADI/eki-latihan-jenkins-deploy-belajar-spring-dasar
nanti akan berubah


Belajar Poll SCM - #2 Started by changes from noreply (2 file(s) changed) (Open)
New
11:31
Belajar Poll SCM - #2 Success after 26 sec (Open)





*/5 * * * *  = At every 5th minute. (tiap 5 menit sekali)


17. 01:26:43 - Disabled Job


disable job = semua konfigurasi tetap ada tetapi job tidak hilang


Dashboard - Belajar Scheduled Job ->  Configure -> General , Disable this project (checklist) ->  Save 

pada Dashboard - Belajar Scheduled Job    Build Now akan hilang



18. 01:29:16 - Jenkins Environment Variable  (keperluan untuk logging console output)


List ENV JENKINS :
http://192.168.100.55:7000/env-vars.html/


Execute shell Command :
echo "Execute Job ${JOB_NAME}:${BUILD_NUMBER}" ;


Dashboard - New Item ->  enter an item name : "Belajar Env Variable"  -> Copy from "Belajar Jenkins" -> Ok (semuanya di copy)  
-> Build (add build step) : Execute Shell  (rubah ke paling atas) -> echo "Execute Job ${JOB_NAME}:${BUILD_NUMBER}"   (ini pake linux command) -> Save



Dashboard -> Belajar Env Variable -> Build History #1 -> Console Output -> akan ada kata2 "Execute Job Belajar Env Variable:1"


19. 01:33:47 - Global Environment Variable (keperluan untuk logging console output, tapi pake variable global yang udah di set)


Dashboard -> Manage Jenkins -> Configure System -> GLobal Properties , Environment variable (checklist) 
-> add , Name : "DEPLOY_AUTHOR" , Value : "EKI TESTING"

Dashboard ->  "Belajar Env Variable"  -> Configure ->
-> Build (add build step) : Execute Shell  (EDIT ONLY) -> 
echo "============================= Execute Job ${JOB_NAME}:${BUILD_NUMBER} =============================";
echo "============================= Build by ${DEPLOY_AUTHOR} ============================= ";
-> Save


Dashboard -> Belajar Env Variable -> Build History #2 -> Console Output -> 

+ echo ============================= Execute Job Belajar Env Variable:2 =============================
============================= Execute Job Belajar Env Variable:2 =============================
+ echo ============================= Build by EKI TESTING ============================= 
============================= Build by EKI TESTING ============================= 

20. 01:37:13 - Build Parameter

kadang ada kasus dmn kita ingin meminta input data (string,boolean,seceret,dll) dari user sebelum menjalankan job tersebut

this project is parameterized, Name : SCRIPT,


Dashboard - New Item ->  enter an item name : "Belajar Build Parameter"  -> Copy from "Belajar Jenkins" -> Ok (semuanya di copy)
-> tab General, this project is parameterized -> add parameter -> Choice Parameter

------------ NOTE
Choice Parameter =  milih kasi opsi
boolean = true/false
credential = pilih credential
file = pilih file,
multi line string = jika stringnya lebih dari 1 baris
password = password
run = run
string = input string
------------ NOTE



Name  :  Script
clean<center biar kebawah ,dst>
compile
test
packages




hapus semua execute shell

tambahkan 1 saja execute shell
./mvnw ${SCRIPT}


->Save


Dashboard -> Belajar Build Parameter -> Build with parameters (penggatinya Build Now, akan muncul combo box SCRIPT)

check :

Dashboard ->  Belajar Build Parametere -> Build History #<BUILD_NUMBER> -> Console Output -> (akan di eksecute berdasarkan script)


21. 01:42:45 - Discard Old Build

jenkins menyimpan semua history build (ini gak baik, server akan penuh storagenya)

discard old build = untuk menghapus history build secara otomatis, menggunakan hari atau jumlah buildnya yg ingin di simpan

Dashboard -> Belajar Jenkins -> Configure -> Discard old builds -> Log Rotation -> 

Days to keep builds  : 1
Max # of build to keep : 1

-> Save


Dashboard -> Belajar Jenkins -> Build Now  (setelah selesai build akan hapus historynya dan hanya sisa yang terakhir ydi build)

21. 01:46:26 - Build Executor  (PARALEL BUILD, mirip child process nodejs)

secara default build executornya 2

artinya untuk build project lain haruus menunggu build dari project 2 yang di kerjakan terlebih dahulu ( ngantri  mirip await nodejs)


dashboard -> manage jenkins -> configure system ->  # of executors : 1 (sesuaikan thread processor) -> Save

setelah di save bisa di lihat di dashboard "Build Executor Status"
hanya akan ada 1



bisa di tambahkan sesuai keinginan harap bijak dan sesuaikan dengan hardware server


dashboard -> manage jenkins -> configure system ->  # of executors : 4 -> Save   (recomend untuk processor 4 core / 4 threads dan ram 4GB)


22. 01:50:40 - User Management


create user :

dashboard -> manage jenkins -> manage user -> create user

ekitesting
masuk123
eki testing
ekitesting@mail.com

Logout Login lagi pake user baru



anodymous read only (recomended jika project berupa open source, hanya bisa liad job , dll bukan konfigurasi) :
Dashboard -> Manage Jenkins -> Configure Global Security -> Authorization -> Logged-in users can do anything -> Allow Anonymous Read Access -> Save

Logout


----------- PLUGIN ROLE BASE AUTHORIZATION STRATEGY ----------- 
(bikin user di jenkins sama aja bikin user administrator bs digunakan apapun) , nah di jenkins kalo mw role spesific untuk usernya perlu install plugin

Role-Based Authorization Strategy

Dashboard -> Manage jenkins -> manage plugin -> available -> Role-Based Authorization Strategy -> Download install n restart

Dashboard -> Manage Jenkins -> Configure Global Security -> Authorization -> Role-Based Strategy -> Save



Manage Roles =  untuk manage roles nya

Dashboard -> Manage Jenkins -> Manage and assign Roles -> Manage Roles -> Role to add  :
user_role (overall:read, all job , all run , all view , scm)
guest_role (overall:read, job : discover , read dan workspace      view : read)
-> Save


Assign Roles =  memberikan hak akses kepada

Dashboard -> Manage Jenkins -> Manage and assign Roles -> Assign Roles -> 
CRYPT : admin
Anonymous : guest_role
-> Save



dashboard -> manage jenkins -> manage user -> create user
ekirole
masuk123
eki role
ekiroleg@mail.com
-> Save


Dashboard -> Manage Jenkins -> Manage and assign Roles -> Assign Roles -> User/group to add -> ekirole (set to user_role) -> add -> Save


Dashboard -> Manage Jenkins -> Manage and assign Roles -> Assign Roles -> User/group to add -> ekitesting (set to user_role) -> add -> Save



login pake ekirole / ekitesting 
tidak akan ada menu Manage Jenkins



User Management Lainnya
e https://plugins.jenkins.io/saml/  (WINDWOS LDAP / LINUX LDAP, dll)
e https://plugins.jenkins.io/google-login/
e https://plugins.jenkins.io/github-oauth/
e https://plugins.jenkins.io/gitlab-oauth/
e Dan lain-lain https:/plugins.jenkins.io/ui/search/?labels=user



23. 02:02:02 - Trigger Build Remotely

tigerr remotely -> tanpa harus buka web jenkins  (tapi perlu token)



Build Trigger -> trigger builds remotely -> Authentication Token -> EKITESTING123






----------- PLUGIN ROLE BASE AUTHORIZATION STRATEGY ----------- 






--------------------programmer zaman now



